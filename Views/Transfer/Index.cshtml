@model DiaFisTransferEntegrasyonu.Models.TransferViewModel
@{
    ViewData["Title"] = "Dia Fiş Aktarım";
}

<style>
    .button-container .btn {
        height: 60px;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .ui-autocomplete {
        max-height: 200px;
        overflow-y: auto;
        overflow-x: hidden;
        z-index: 9999 !important;
        background-color: white;
        border: 1px solid #ddd;
        box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }

    .ui-menu-item {
        padding: 5px 10px;
        cursor: pointer;
    }

        .ui-menu-item:hover {
            background-color: #f0f0f0;
        }

    .form-header {
        border-radius: 0.25rem 0.25rem 0rem 0rem;
        color: white;
        padding: 15px;
        padding-top: 20px;
        text-align: center;
    }

    .form-section {
        margin: 20px 0;
    }

    .form-button {
        color: white;
    }

    .container {
        width: 70%;
        min-width: 600px;
    }

    .currency-rates {
        position: fixed;
        top: 10px;
        right: 10px;
        background-color: #acacfd;
        color: #fdfdfd;
        padding: 10px;
        border-radius: 5px;
        font-weight: bold;
        z-index: 1000;
    }

        .currency-rates span {
            margin-right: 10px;
        }
</style>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<!-- Döviz kurları için yeni div -->
<div class="currency-rates">
    <span>€: <span id="eur-rate">0.00</span></span>
    <span>$: <span id="usd-rate">0.00</span></span>
    <span>£: <span id="gbp-rate">0.00</span></span>
</div>

<div>
    <!-- Güncelleme Butonu -->
    <button id="updateButton" class="btn btn-primary update-button">Bilgileri Güncelle</button>

    <!-- Form Seçim Butonları -->
    <div class="container button-container">
        <div class="row d-flex align-items-stretch">
            <div class="col text-center">
                <button class="btn btn-success" onclick="toggleForm('form1')">TAHSİLAT FİŞİ (KASA)</button>
            </div>
            <div class="col text-center">
                <button class="btn btn-primary" onclick="toggleForm('form2')">KREDİ KARTI TAHSİLAT</button>
            </div>
            <div class="col text-center">
                <button class="btn btn-secondary" onclick="toggleForm('form3')" style="background-color: darkorange; border: none;">CARİ VİRMAN FİŞİ</button>
            </div>
            <div class="col text-center">
                <button class="btn btn-danger" onclick="toggleForm('form4')">GELEN HAVALE</button>
            </div>
        </div>
    </div>

    <!-- Form1: NAKİT TAHSİLAT FİŞİ (AJAX ile Gönderilecek) -->
    <form id="form1" class="container mt-5 shadow" method="post" asp-action="NakitTahsilatFisKayit" style="border-radius: 0.25rem; padding: 0px; display: block;">
        <div class="form-header" style="background-color: #28a745;">
            <h3>NAKİT TAHSİLAT FİŞİ</h3>
        </div>

        <div class="form-section" style="padding: 20px; margin: 0;">
            <div class="form-row">
                <div class="form-group col">
                    <label for="cashBox1">Kasa Seçiniz</label>
                    <select name="kasaId" class="form-control selectpicker" data-style="btn-primary" id="cashBox1">
                        <option value="" disabled selected>Kasa Seçiniz</option>
                        @foreach (var kasa in Model.KasaKartlari)
                        {
                            <option name="kasaId" value="@kasa.KasaId" data-kasaid="@kasa.KasaId">@kasa.KasaAdi</option>
                        }
                    </select>
                </div>
                <div class="form-group col">
                    <label for="date1">Tarih</label>
                    <input type="date" name="tarih" class="form-control" id="date1">
                </div>
            </div>

            <div class="form-group">
                <label for="cariAdi1">Cari</label>
                <input type="text" class="form-control cari-input" placeholder="Cari Seçiniz (Liste)" id="cariAdi1" name="cariAdi" autocomplete="off" required>
                <input type="hidden" id="cariId1" name="cariId">
            </div>

            <div class="form-row">
                <div class="form-group col-6">
                    <label for="amount1">Tutar</label>
                    <input type="number" class="form-control" name ="tutar" id="amount1" placeholder="Tutar Giriniz">
                </div>
                <div class="form-group col-2">
                    <label for="currency1">Döviz</label>
                    <select name="doviz" class="form-control selectpicker" data-style="btn-primary" id="currency1">
                        <option value="" disabled selected>Döviz</option>
                        <option value="TL" selected>₺</option>
                        <option value="USD">&#36;</option>
                        <option value="EUR">&#8364;</option>
                        <option value="GBP">&#163;</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                <label for="description1">Fiş Açıklaması</label>
                <input type="text" name="aciklama" class="form-control" id="description1" placeholder="Fiş Açıklaması">
            </div>
        </div>
        <div style="padding: 20px; padding-top: 0px; margin: 0px;">
            <button type="submit" class="btn form-button btn-block" id="saveButton1" style="border-radius: 0.25rem; background-color: #28a745;">KAYDET</button>
        </div>
    </form>

    <!-- Form2: KREDİ KARTI TAHSİLAT (Standart Form Submit) -->
    <form id="form2" class="container mt-5 shadow" method="post" asp-action="KartTahsilatFisKayit" style="border-radius: 0.25rem; padding: 0px; display: none;">
        <div class="form-header" style="background-color: #007bff;">
            <h3>KREDİ KARTI TAHSİLAT FİŞİ</h3>
        </div>

        <div class="form-section" style="padding: 20px; margin: 0;">
            <!-- Ödeme Planı Seçimi -->
            <div class="form-row">
                <div class="form-group col">
                    <label for="paymentPlan2">Ödeme Planı Seçiniz</label>
                    <select class="form-control selectpicker" data-style="btn-primary" id="paymentPlan2" name="PlanId" required>
                        <option value="" disabled selected>Ödeme Planı Seçiniz</option>
                        @if (Model?.OdemePlanlari != null)
                        {
                            foreach (var plan in Model.OdemePlanlari)
                            {
                                <option value="@plan.PlanId" data-planhesapkey="@plan.PlanHesapKey">@plan.PlanAdi</option>
                            }
                        }
                    </select>
                    <!-- Gizli Alanlar -->
                    <input type="hidden" id="PlanHesapKey2" name="PlanHesapKey" />
                </div>
                <div class="form-group col">
                    <label for="date2">Tarih</label>
                    <input type="date" class="form-control" id="date2" name="Tarih" required>
                </div>
            </div>

            <div class="form-group">
                <label for="cariAdi2">Cari</label>
                <input type="text" class="form-control cari-input" placeholder="Cari Seçiniz (Liste)" id="cariAdi2" name="cariAdi" autocomplete="off" required>
                <input type="hidden" id="cariId2" name="cariId">
            </div>

            <!-- Tutar ve Döviz -->
            <div class="form-row">
                <div class="form-group col-6">
                    <label for="amount2">Tutar</label>
                    <input type="number" class="form-control" id="amount2" name="Tutar" placeholder="Tutar Giriniz" step="0.01" required>
                </div>
                <div class="form-group col-2">
                    <label for="currency2">Döviz</label>
                    <select class="form-control selectpicker" data-style="btn-primary" id="currency2" name="Doviz" required>
                        <option value="TL" selected>₺</option>
                        <option value="USD">&#36;</option>
                        <option value="EUR">&#8364;</option>
                        <option value="GBP">&#163;</option>
                    </select>
                </div>
            </div>

            <!-- Açıklama -->
            <div class="form-group">
                <label for="description2">Fiş Açıklaması</label>
                <input type="text" class="form-control" id="description2" name="Aciklama" placeholder="Fiş Açıklaması" required>
            </div>
        </div>
        <div style="padding: 20px; padding-top: 0px; margin: 0px;">
            <button type="submit" class="btn form-button btn-block" id="saveButton2" style="border-radius: 0.25rem; background-color: #007bff;">KAYDET</button>
        </div>
    </form>

    <!-- Form3: CARİ VİRMAN FİŞİ (Standart Form Submit) -->
    <form id="form3" class="container mt-5 shadow" method="post" action="/Transfer/VirmanFisKayit" style="border-radius: 0.25rem; padding: 0px; display: none;">
        <div class="form-header" style="background-color: darkorange;">
            <h3>CARİ VİRMAN FİŞİ</h3>
        </div>

        <div class="form-section" style="padding: 20px; margin: 0;">
            <div class="form-row" style="align-items: end; justify-content: end;">
                <div class="form-group col-6">
                    <label for="date3">Tarih</label>
                    <input type="date" class="form-control" id="date3" name="tarih" required>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col">
                    <label for="alacakCariAdi3">Ödemeyi Yapan Firma</label>
                    <input type="text" class="form-control cari-input" placeholder="Alacak Cari Seçiniz (Liste)" id="alacakCariAdi3" name="alacakCariAdi" autocomplete="off" required>
                    <input type="hidden" id="alacakCariId3" name="alacakCariId">
                </div>
                <div class="form-group col-4">
                    <label for="alacakTutar3">Alacak Tutar</label>
                    <input type="number" class="form-control" id="alacakTutar3" name="alacakTutar" placeholder="Alacak Tutar" step="0.01" required>
                </div>
                <div class="form-group col-2">
                    <label for="alacakDoviz3">Alacak Döviz</label>
                    <select class="form-control selectpicker" data-style="btn-primary" id="alacakDoviz3" name="alacakDoviz" required>
                        <option value="TL" selected>₺</option>
                        <option value="USD">&#36;</option>
                        <option value="EUR">&#8364;</option>
                        <option value="GBP">&#163;</option>
                    </select>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col">
                    <label for="borcCariAdi3">POS Çekimi Yapılan Firma</label>
                    <input type="text" class="form-control cari-input" placeholder="Borç Cari Seçiniz (Liste)" id="borcCariAdi3" name="borcCariAdi" autocomplete="off" required>
                    <input type="hidden" id="borcCariId3" name="borcCariId">
                </div>
                <div class="form-group col-4">
                    <label for="borcTutar3">Borç Tutar</label>
                    <input type="number" class="form-control" id="borcTutar3" name="borcTutar" placeholder="Borç Tutar" step="0.01" readonly>
                </div>
                <div class="form-group col-2">
                    <label for="borcDoviz3">Borç Döviz</label>
                    <select class="form-control selectpicker" data-style="btn-primary" id="borcDoviz3" name="borcDoviz" disabled>
                        <option value="TL" selected>₺</option>
                        <option value="USD">&#36;</option>
                        <option value="EUR">&#8364;</option>
                        <option value="GBP">&#163;</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                <label for="aciklama3">Fiş Açıklaması</label>
                <input type="text" class="form-control" id="aciklama3" name="aciklama" placeholder="Fiş Açıklaması" required>
            </div>
        </div>
        <div style="padding: 20px; padding-top: 0px; margin: 0px;">
            <button type="submit" class="btn form-button btn-block" id="saveButton3" style="border-radius: 0.25rem; background-color: darkorange;">KAYDET</button>
        </div>
    </form>

    <!-- Form4: GELEN HAVALE (Standart Form Submit) -->
    <form id="form4" class="container mt-5 shadow" method="post" action="/Transfer/GelenHavaleKayit" style="border-radius: 0.25rem; padding: 0px; display: none;">
        <div class="form-header" style="background-color: #dc3545;">
            <h3>GELEN HAVALE FİŞİ</h3>
        </div>

        <div class="form-section" style="padding: 20px; margin: 0;">
            <div class="form-row">
                <div class="form-group col">
                    <label for="bankaHesapAdi4">Banka Hesabı</label>
                    <select class="form-control selectpicker" data-style="btn-primary" id="bankaHesapAdi4" name="bankaHesapAdi" required>
                        <option value="" disabled selected>Banka Hesabı Seçiniz</option>
                        @if (Model?.BankaHesaplari != null)
                        {
                            foreach (var hesap in Model.BankaHesaplari)
                            {
                                <option value="@hesap.HesapId">@hesap.HesapAdi</option>
                            }
                        }
                    </select>
                    <input type="hidden" id="bankaHesapId4" name="bankaHesapId">
                </div>
                <div class="form-group col-md-3">
                    <label for="tarih4">Tarih</label>
                    <input type="date" class="form-control" id="tarih4" name="tarih" required>
                </div>
            </div>

            <div class="form-group">
                <label for="cariAdi4">Cari</label>
                <input type="text" class="form-control cari-input" placeholder="Cari Seçiniz (Liste)" id="cariAdi4" name="cariAdi" autocomplete="off" required>
                <input type="hidden" id="cariId4" name="cariId">
            </div>

            <div class="form-row">
                <div class="form-group col-6">
                    <label for="tutar4">Tutar</label>
                    <input type="number" class="form-control" id="tutar4" name="tutar" placeholder="Tutar Giriniz" step="0.01" required>
                </div>
                <div class="form-group col-2">
                    <label for="doviz4">Döviz</label>
                    <select class="form-control selectpicker" data-style="btn-primary" id="doviz4" name="doviz" required>
                        <option value="TL" selected>₺</option>
                        <option value="USD">&#36;</option>
                        <option value="EUR">&#8364;</option>
                        <option value="GBP">&#163;</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                <label for="aciklama4">Fiş Açıklaması</label>
                <input type="text" class="form-control" id="aciklama4" name="aciklama" placeholder="Fiş Açıklaması">
            </div>
        </div>
        <div style="padding: 20px; padding-top: 0px; margin: 0px;">
            <button type="submit" class="btn form-button btn-block" id="saveButton4" style="border-radius: 0.25rem; background-color: #dc3545;">KAYDET</button>
        </div>
    </form>

</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            // SweetAlert mesajlarını göster
            var message = @Html.Raw(Json.Serialize(TempData["SweetAlertMessage"]));
            var alertType = @Html.Raw(Json.Serialize(TempData["SweetAlertType"]));

            if (message) {
                // Eğer mesaj JSON string ise parse et
                try {
                    message = JSON.parse(message);
                } catch (e) {
                    // Parse edilemezse olduğu gibi kullan
                    console.log("Message parsing error:", e);
                }

                Swal.fire({
                    title: alertType === 'success' ? 'Başarılı!' : 'Hata!',
                    text: message,
                    icon: alertType || 'info',
                    confirmButtonText: 'Tamam'
                });
            }

            // Form toggle fonksiyonu
            window.toggleForm = function (formId) {
                $('[id^="form"]').hide();
                $('#' + formId).show();
            };

            // Autocomplete kurulumu
            function setupAutocomplete(cariAdiSelector, cariIdSelector) {
                $(cariAdiSelector).autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: '/Transfer/SearchCariler',
                            type: 'GET',
                            dataType: "json",
                            data: { term: request.term },
                            success: function (data) {
                                console.log('Arama sonuçları:', data);
                                response($.map(data, function (item) {
                                    return {
                                        label: item.label,
                                        value: item.label,
                                        id: item.id
                                    };
                                }));
                            },
                            error: function (xhr, status, error) {
                                console.error('Arama hatası:', error);
                            }
                        });
                    },
                    minLength: 2,
                    select: function (event, ui) {
                        $(this).val(ui.item.label);
                        $(cariIdSelector).val(ui.item.id);
                        return false;
                    }
                }).autocomplete("instance")._renderItem = function (ul, item) {
                    return $("<li>")
                        .append("<div>" + item.label + "</div>")
                        .appendTo(ul);
                };
            }

            // Tüm cari inputları için autocomplete'i ayarla
            setupAutocomplete('#cariAdi1', '#cariId1');
            setupAutocomplete('#cariAdi2', '#cariId2');
            setupAutocomplete('#alacakCariAdi3', '#alacakCariId3');
            setupAutocomplete('#borcCariAdi3', '#borcCariId3');
            setupAutocomplete('#cariAdi4', '#cariId4');

            // Güncelleme butonu işlemleri
            $('#updateButton').click(function () {
                Swal.fire({
                    title: 'Güncelleniyor...',
                    html: 'Bilgiler güncelleniyor, lütfen bekleyiniz...',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                fetch('/Transfer/UpdateInfo', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                })
                    .then(response => response.json())
                    .then(data => {
                        Swal.fire({
                            title: data.success ? 'Başarılı!' : 'Hata!',
                            text: data.message || (data.success ? 'Bilgiler başarıyla güncellendi.' : 'Bilgiler güncellenirken bir hata oluştu.'),
                            icon: data.success ? 'success' : 'error',
                            confirmButtonText: 'Tamam'
                        });
                        if (data.success) {
                            updateDovizKurlari();
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            title: 'Hata!',
                            text: 'Bir hata oluştu. Lütfen tekrar deneyin.',
                            icon: 'error',
                            confirmButtonText: 'Tamam'
                        });
                    });
            });

            // Bugünün tarihini tüm tarih alanlarına ata
            var today = new Date().toISOString().split('T')[0];
            $('input[type="date"]').val(today);

            // Form2: Ödeme Planı değişikliği
            $('#paymentPlan2').change(function () {
                var selectedOption = $(this).find('option:selected');
                $('#PlanHesapKey2').val(selectedOption.data('planhesapkey'));
            });

            // Form3: Tutar senkronizasyonu
            $('#alacakTutar3').on('input', function () {
                $('#borcTutar3').val($(this).val());
            });

            // Form3: Döviz senkronizasyonu
            $('#alacakDoviz3').change(function () {
                $('#borcDoviz3').val($(this).val());
            });

            // Form4: Banka hesabı seçimi
            $('#bankaHesapAdi4').change(function () {
                var selectedHesapId = $(this).val();
                $('#bankaHesapId4').val(selectedHesapId);
            });

            // Enter tuşunu tab gibi çalıştır
            function setupEnterAsTab(formId) {
                $('#' + formId + ' input, #' + formId + ' select').on('keydown', function (e) {
                    if (e.key === 'Enter') {
                        e.preventDefault();
                        var focusables = $('#' + formId).find('input, select').not(':disabled, [readonly]');
                        var currentIndex = focusables.index(this);
                        var nextElement = focusables.eq(currentIndex + 1);
                        if (nextElement.length) {
                            nextElement.focus();
                        }
                    }
                });
            }

            // Tüm formlarda enter tuşunu aktifleştir
            ['form1', 'form2', 'form3', 'form4'].forEach(setupEnterAsTab);

            // Form validasyonları
            $('form').on('submit', function (e) {
                var requiredFields = $(this).find('[required]');
                var isValid = true;

                requiredFields.each(function () {
                    if (!$(this).val()) {
                        isValid = false;
                        $(this).addClass('is-invalid');
                    } else {
                        $(this).removeClass('is-invalid');
                    }
                });

                if (!isValid) {
                    e.preventDefault();
                    Swal.fire({
                        title: 'Hata!',
                        text: 'Lütfen tüm zorunlu alanları doldurun.',
                        icon: 'error',
                        confirmButtonText: 'Tamam'
                    });
                }
            });

            // SweetAlert mesajlarını göster
            var message = '@TempData["Message"]';
            var messageType = '@TempData["MessageType"]';
            if (message) {
                Swal.fire({
                    title: messageType === 'success' ? 'Başarılı!' : 'Hata!',
                    text: message,
                    icon: messageType || 'info',
                    confirmButtonText: 'Tamam'
                });
            }

            // İlk yükleme ve periyodik döviz kuru güncellemesi
            updateDovizKurlari();
            setInterval(updateDovizKurlari, 5 * 60 * 1000); // 5 dakikada bir güncelle
        });

        // Döviz kurlarını güncelle
        function updateDovizKurlari() {
            $.ajax({
                url: '/Transfer/GetDovizKurlari',
                type: 'GET',
                success: function (result) {
                    if (Array.isArray(result)) {
                        result.forEach(function (kur) {
                            if (kur.dovizKodu) {
                                $(`#${kur.dovizKodu.toLowerCase()}-rate`).text(
                                    Number(kur.kur).toFixed(2)
                                );
                            }
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Döviz kurları güncellenirken hata oluştu:', error);
                }
            });
        }

        // Input validation helpers
        $('input[type="number"]').on('input', function () {
            this.value = this.value.replace(/[^0-9.,]/g, '');
        });

        // Numeric input format
        $('input[type="number"]').on('blur', function () {
            if (this.value) {
                this.value = Number(this.value.replace(',', '.')).toFixed(2);
            }
        });
    </script>
}